<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="0"
                                    SnapsToDevicePixels="True"
                                    Stroke="White"
                                    StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource DarkColor}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Margin="0"
                        Background="{DynamicResource Color}"
                        SnapsToDevicePixels="True">
                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                            <TextBlock
                                x:Name="textBlock"
                                HorizontalAlignment="Center"
                                Foreground="{DynamicResource TextBase}"
                                Text="{TemplateBinding Content}" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource LightColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HighLightColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonImage" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Margin="0"
                        Opacity="0.6"
                        Padding="1"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                            <ContentPresenter ContentTemplate="{TemplateBinding Content}"/>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="1.0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonCircleImage" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Margin="0"
                        CornerRadius="40"
                        Padding="4"
                        Background="{DynamicResource Color}"
                        SnapsToDevicePixels="True">
                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Opacity="0.5"
                                ContentTemplate="{TemplateBinding Content}"/>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.75"/>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource LightColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.9"/>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HighLightColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonRounded" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="0"
                                    SnapsToDevicePixels="True"
                                    Stroke="White"
                                    StrokeThickness="1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource DarkColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBase}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="4"
                        x:Name="border"
                        Margin="0"
                        Background="{DynamicResource Color}"
                        SnapsToDevicePixels="True">
                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                            <TextBlock
                                x:Name="textBlock"
                                HorizontalAlignment="Center"
                                Foreground="{DynamicResource TextBase}"
                                Text="{TemplateBinding Content}" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource LightColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HighLightColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonSquare" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="0"
                                    SnapsToDevicePixels="True"
                                    Stroke="White"
                                    StrokeThickness="1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource DarkColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBase}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="0"
                        x:Name="border"
                        Margin="0"
                        Background="{DynamicResource Color}"
                        SnapsToDevicePixels="True">
                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                            <TextBlock
                                x:Name="textBlock"
                                HorizontalAlignment="Center"
                                Foreground="{DynamicResource TextBase}"
                                Text="{TemplateBinding Content}" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource LightColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HighLightColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ButtonRoundedLeft" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="0"
                                    SnapsToDevicePixels="True"
                                    Stroke="White"
                                    StrokeThickness="1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource DarkColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBase}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="4, 0, 0, 4"
                        x:Name="border"
                        Margin="0"
                        Background="{DynamicResource Color}"
                        SnapsToDevicePixels="True">
                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                            <TextBlock
                                x:Name="textBlock"
                                HorizontalAlignment="Center"
                                Foreground="{DynamicResource TextBase}"
                                Text="{TemplateBinding Content}" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource LightColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HighLightColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonRoundedTopLeft" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="0"
                                    SnapsToDevicePixels="True"
                                    Stroke="White"
                                    StrokeThickness="1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource DarkColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBase}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="4, 0, 0, 0"
                        x:Name="border"
                        Margin="0"
                        Background="{DynamicResource Color}"
                        SnapsToDevicePixels="True">
                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                            <TextBlock
                                x:Name="textBlock"
                                HorizontalAlignment="Center"
                                Foreground="{DynamicResource TextBase}"
                                Text="{TemplateBinding Content}" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource LightColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HighLightColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ButtonRoundedBottomLeft" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="0"
                                    SnapsToDevicePixels="True"
                                    Stroke="White"
                                    StrokeThickness="1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource DarkColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBase}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="0, 0, 0, 4"
                        x:Name="border"
                        Margin="0"
                        Background="{DynamicResource Color}"
                        SnapsToDevicePixels="True">
                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                            <TextBlock
                                x:Name="textBlock"
                                HorizontalAlignment="Center"
                                Foreground="{DynamicResource TextBase}"
                                Text="{TemplateBinding Content}" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource LightColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HighLightColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ButtonRoundedRight" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="0"
                                    SnapsToDevicePixels="True"
                                    Stroke="White"
                                    StrokeThickness="1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource DarkColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBase}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="0, 4, 4, 0"
                        x:Name="border"
                        Margin="0"
                        Background="{DynamicResource Color}"
                        SnapsToDevicePixels="True">
                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                            <TextBlock
                                x:Name="textBlock"
                                HorizontalAlignment="Center"
                                Foreground="{DynamicResource TextBase}"
                                Text="{TemplateBinding Content}" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource LightColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HighLightColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonRoundedTopRight" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="0"
                                    SnapsToDevicePixels="True"
                                    Stroke="White"
                                    StrokeThickness="1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource DarkColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBase}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="0, 4, 0, 0"
                        x:Name="border"
                        Margin="0"
                        Background="{DynamicResource Color}"
                        SnapsToDevicePixels="True">
                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                            <TextBlock
                                x:Name="textBlock"
                                HorizontalAlignment="Center"
                                Foreground="{DynamicResource TextBase}"
                                Text="{TemplateBinding Content}" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource LightColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HighLightColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ButtonRoundedBottomRight" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="0"
                                    SnapsToDevicePixels="True"
                                    Stroke="White"
                                    StrokeThickness="1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource DarkColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBase}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="0, 0, 4, 0"
                        x:Name="border"
                        Margin="0"
                        Background="{DynamicResource Color}"
                        SnapsToDevicePixels="True">
                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                            <TextBlock
                                x:Name="textBlock"
                                HorizontalAlignment="Center"
                                Foreground="{DynamicResource TextBase}"
                                Text="{TemplateBinding Content}" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource LightColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HighLightColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>