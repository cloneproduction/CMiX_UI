<UserControl
    x:Class="CMiX.Studio.Views.BeatControls"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Beat="clr-namespace:CMiX.Core.Presentation.ViewModels.Beat;assembly=CMiX.Core"
    d:DataContext="{d:DesignInstance Type={x:Type Beat:BeatModifier}, IsDesignTimeCreatable=False}"
    d:DesignHeight="46.5"
    d:DesignWidth="226.667"
    mc:Ignorable="d">

    <Border x:Name="MainBorder" Background="Transparent">
        <Grid >
            <Border x:Name="borderMask" 
                Grid.Column="1" 
                Background="{DynamicResource DarkColor}" 
                CornerRadius="{DynamicResource CornerRadiusDefault}"/>
            <Border Background="{DynamicResource DarkColor}">
                <Border.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=borderMask}"/>
                </Border.OpacityMask>
                <Grid Grid.Column="1">
                    <Border Background="{DynamicResource LightColor}" Opacity="{Binding Path=AnimatedDouble.AnimationPosition}"/>
                    <TextBlock 
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource TextBase}" 
                        Text="{Binding BPM, Mode=OneWay, StringFormat=0 BPM}" />
                    <Button
                        HorizontalAlignment="Left"
                        DockPanel.Dock="Left"
                        Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Command="{Binding DivideCommand}"
                        Content="-"
                        IsDefault="True">
                        <Button.Style>
                            <Style BasedOn="{StaticResource ButtonRoundedLeft}" TargetType="{x:Type Button}">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=MainBorder}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button
                        HorizontalAlignment="Right"
                        Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Command="{Binding MultiplyCommand}"
                        Content="+"
                        DockPanel.Dock="Right"
                        IsDefault="True">
                        <Button.Style>
                            <Style BasedOn="{StaticResource ButtonRoundedBottomRight}" TargetType="{x:Type Button}">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=MainBorder}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Border>
        </Grid>
    </Border>
</UserControl>