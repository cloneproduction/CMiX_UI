<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:CMiX.Core.Presentation.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CMiX.Core;component/Presentation/Themes/Styles/Border.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <ControlTemplate x:Key="DefaultToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <DockPanel>
            <Border x:Name="border"
                    DockPanel.Dock="Right"
                    CornerRadius="2"
                    Padding="2"
                    Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True">
                <Image x:Name="Path" Opacity="0.75" Source="{DynamicResource IsChecked}"/>
            </Border>
        </DockPanel>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource Accent}" />
                    <Setter TargetName="Path" Property="Visibility" Value="Visible"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="false" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource DarkColor}" />
                    <Setter TargetName="Path" Property="Visibility" Value="Hidden"/>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="true" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource AccentLight1}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="false" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource Color}" />
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="true" />
                    <Condition Property="IsChecked" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource HighLightColor}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="true" />
                    <Condition Property="IsChecked" Value="false" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource HighLightColor}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CMiXToggleButtonTemplate" TargetType="{x:Type Controls:CMiXToggleButton}">
        <DockPanel>
            <Border SnapsToDevicePixels="True" Height="16" Width="16" x:Name="border" Grid.Column="1">
                <Border.Style>
                    <Style BasedOn="{StaticResource BorderShadow}" TargetType="{x:Type Border}">
                        <Setter Property="DockPanel.Dock" Value="Right"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Dock, RelativeSource={RelativeSource TemplatedParent}}" Value="Left">
                                <Setter Property="DockPanel.Dock" Value="Left"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Path=Dock, RelativeSource={RelativeSource TemplatedParent}}" Value="Right">
                                <Setter Property="DockPanel.Dock" Value="Right"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Border
                    Height="14" Width="14"
                    CornerRadius="2"
                    Padding="2"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True">
                    <Image x:Name="Path" Opacity="0.75" Source="{DynamicResource IsChecked}"/>
                </Border>
            </Border>

            <TextBlock x:Name="textBlock"
                       Foreground="{DynamicResource TextBase}" 
                       Padding="4" 
                       VerticalAlignment="Center"
                       Text="{Binding Path=Caption, RelativeSource={RelativeSource TemplatedParent}}"/>
        </DockPanel>

        <ControlTemplate.Triggers>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource Accent}" />
                    <Setter TargetName="Path" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="textBlock" Property="Opacity" Value="1.0"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="false" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource DarkColor}" />
                    <Setter TargetName="Path" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="textBlock" Property="Opacity" Value="0.50"/>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="true" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource AccentLight1}" />
                    <Setter TargetName="textBlock" Property="Opacity" Value="1.0"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="false" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource Color}" />
                    <Setter TargetName="textBlock" Property="Opacity" Value="0.75"/>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="true" />
                    <Condition Property="IsChecked" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource HighLightColor}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="true" />
                    <Condition Property="IsChecked" Value="false" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource HighLightColor}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            
        </ControlTemplate.Triggers>
    </ControlTemplate>

    
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    SnapsToDevicePixels="True"
                                    Stroke="White"
                                    StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource Color}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource DefaultToggleButtonTemplate }"/>
    </Style>

    
    <Style x:Key="CMiXToggleButtonStyle" TargetType="{x:Type Controls:CMiXToggleButton}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    SnapsToDevicePixels="True"
                                    Stroke="White"
                                    StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource Color}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource CMiXToggleButtonTemplate }"/>
    </Style>


    <Style x:Key="ToggleVisibility" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    SnapsToDevicePixels="True"
                                    Stroke="White"
                                    StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <Image x:Name="ImageIcon" Opacity="0.75" Margin="4" Source="{DynamicResource NotVisible}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ImageIcon" Property="Source" Value="{DynamicResource Visible}"/>
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ImageIcon" Property="Source" Value="{DynamicResource NotVisible}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ImageIcon" Property="Source" Value="{DynamicResource Visible}"/>
                                <Setter TargetName="ImageIcon" Property="Opacity" Value="0.9"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ImageIcon" Property="Source" Value="{DynamicResource NotVisible}"/>
                                <Setter TargetName="ImageIcon" Property="Opacity" Value="0.9"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    
    <Style x:Key="ToggleTransformModifierMenu" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        CornerRadius="2"
                        Padding="{TemplateBinding Padding}"
                        Background="{DynamicResource HighDarkerColor}"
                        SnapsToDevicePixels="True">
                        <DockPanel>
                            <Path 
                                Margin="4"
                                DockPanel.Dock="Right"
                                x:Name="arrow" 
                                Data="M 1,1.5 L 4.5,5 L 8,1.5" 
                                HorizontalAlignment="Center" 
                                SnapsToDevicePixels="false" 
                                Stroke="{DynamicResource HighLightColor}" 
                                StrokeThickness="2" 
                                VerticalAlignment="Center"/>
                            <TextBlock Padding="4" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, UpdateSourceTrigger=PropertyChanged}"/>

                        </DockPanel>
                        
                        
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource DarkColor}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>

                            </MultiTrigger.Setters>
                        </MultiTrigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>

                            </MultiTrigger.Setters>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>