<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:CMiX.Core.Presentation.Controls"
                    xmlns:Converters="clr-namespace:CMiX.Core.Presentation.ValueConverters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <Converters:IntToStringConverter x:Key="IntToString" />

            <Trigger x:Key="Trigger0" Property="FrameworkElement.IsMouseOver" Value="True">
                <Setter Property="FrameworkElement.Cursor" Value="Arrow"/>
            </Trigger>

            <DataTrigger x:Key="Trigger1" Binding="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter Property="FrameworkElement.Visibility" Value="Hidden" />
            </DataTrigger>

            <MultiDataTrigger x:Key="Trigger2">
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger x:Key="Trigger3">
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="FrameworkElement.Visibility" Value="Hidden" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="SliderButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="0"
                                    SnapsToDevicePixels="True"
                                    Stroke="White"
                                    StrokeThickness="1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource DarkColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBase}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="0"
                        x:Name="border"
                        Margin="0"
                        Background="{DynamicResource Color}"
                        SnapsToDevicePixels="True">
                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                            <TextBlock
                                x:Name="textBlock"
                                HorizontalAlignment="Center"
                                Foreground="{DynamicResource TextBase}"
                                Text="{TemplateBinding Content}" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource LightColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HighLightColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>


                        <StaticResource ResourceKey="Trigger0" />
                        <StaticResource ResourceKey="Trigger1" />
                        <StaticResource ResourceKey="Trigger2" />
                        <StaticResource ResourceKey="Trigger3" />

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="SliderTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="8, 0"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBase}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource SuperHighLightColor}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource TextBase}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" CornerRadius="0" Background="{DynamicResource SuperHighDarkerColor}">
                        <ScrollViewer x:Name="PART_ContentHost"
                            Focusable="False"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SuperHighDarkerColor}" />
                        </Trigger>
                        <DataTrigger  Binding="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="distanceSliderBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource DarkColor}"/>
        <Setter Property="Controls:MouseDownHelper.IsEnabled" Value="True"/>
        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Color}"/>
                <Setter Property="Cursor" Value="SizeWE"/>
            </Trigger>

            <Trigger Property="Controls:MouseDownHelper.IsMouseLeftButtonDown" Value="True">
                <Setter Property="Cursor" Value="None"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="CMiXCounterStyle" TargetType="Controls:Counter">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Height" Value="21"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:Counter">
                    <Grid>
                        <Border x:Name="borderMask" Style="{DynamicResource BorderMask}"/>
                        <Border x:Name="mainBorder" Style="{StaticResource distanceSliderBorder}">
                            <Border.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=borderMask}"/>
                            </Border.OpacityMask>
                            <Grid>
                                <TextBox x:Name="valueInput" 
                                    Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource SliderTextBox}"
                                    Text="{Binding Path=Value, Mode=TwoWay, Converter={StaticResource IntToString}, UpdateSourceTrigger=LostFocus, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <DockPanel>
                                    <Button x:Name="SubButton" 
                                            HorizontalAlignment="Left"
                                        Content="-" 
                                        DockPanel.Dock="Left"
                                        Width="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{DynamicResource SliderButton}">
                                    </Button>
                                    <Button x:Name="AddButton" 
                                            HorizontalAlignment="Right"
                                        Content="+" 
                                        DockPanel.Dock="Right"
                                        Width="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{DynamicResource SliderButton}">
                                    </Button>
                                    <Border x:Name="borderValueDisplay" 
                                        Background="Transparent">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger  Binding="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Label x:Name="valueDisplay" 
                                        Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                        Padding="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Content="{Binding Path=Value, Mode=TwoWay, Converter={StaticResource IntToString}, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}">
                                        </Label>
                                    </Border>
                                </DockPanel>
                            </Grid>
                        </Border>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
</ResourceDictionary>