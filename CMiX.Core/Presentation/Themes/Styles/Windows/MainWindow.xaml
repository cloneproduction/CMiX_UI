<ResourceDictionary 
    x:Class="CMiX.Core.Themes.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome 
                    CaptionHeight="30"
                    GlassFrameThickness="0"
                    CornerRadius="0"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="10"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SuperHighDarkerColor}" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border>
                        <Grid >
                            <Border 
                                Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,30,0,0">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <!-- Add to avoid border disappearing when window is maximised -->
                                            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                                                <Setter Property="Margin" Value="7"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Normal">
                                                <Setter Property="Margin" Value="0"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <AdornerDecorator>
                                    <ContentPresenter />
                                </AdornerDecorator>
                            </Border>
                            <Border>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <!-- Add to avoid border disappearing when window is maximised -->
                                            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                                                <Setter Property="Margin" Value="7"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Normal">
                                                <Setter Property="Margin" Value="0"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <DockPanel 
                                    Height="30"
                                    VerticalAlignment="Top"
                                    LastChildFill="False">
                                    <TextBlock 
                                        Margin="10,0,0,0"
                                        VerticalAlignment="Center"
                                        DockPanel.Dock="Left"
                                        FontSize="12"
                                        Opacity="0.70"
                                        Foreground="{DynamicResource TextBase}"
                                        Text="{TemplateBinding Title}" />
                                    <Button x:Name="btnClose"
                                        Command="{Binding CloseWindowCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                        Style="{DynamicResource ButtonCloseWindowStyle}"
                                        DockPanel.Dock="Right"
                                        WindowChrome.IsHitTestVisibleInChrome="True" >
                                    </Button>
                                    <Button x:Name="btnRestore"
                                        Command="{Binding MaximizeWindowCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                        Style="{DynamicResource ButtonMaximizeWindowStyle}"
                                        DockPanel.Dock="Right"
                                        WindowChrome.IsHitTestVisibleInChrome="True" >
                                    </Button>
                                    <Button x:Name="btnMinimize"
                                        Command="{Binding MinimizeWindowCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                        Style="{DynamicResource ButtonMinimizeWindowStyle}"
                                        VerticalContentAlignment="Bottom"
                                        DockPanel.Dock="Right"
                                        WindowChrome.IsHitTestVisibleInChrome="True" >
                                    </Button>
                                </DockPanel>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonCloseWindowStyle" TargetType="{x:Type Button}">
        <!--<EventSetter Event="Click" Handler="CloseClick"/>-->
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Background" Value="{DynamicResource DarkColor}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="Transparent"
                        CornerRadius="0, 4, 0, 0"
                        SnapsToDevicePixels="True" Padding="8">
                        <Image x:Name="image" Source="{DynamicResource CloseTab}" Opacity="0.75"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Red" />
                            <Setter TargetName="image" Property="Opacity" Value="1.0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Maroon" />
                            <Setter TargetName="image" Property="Opacity" Value="1.0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonMaximizeWindowStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Background" Value="{DynamicResource DarkColor}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="Transparent"
                        SnapsToDevicePixels="True" Padding="10">
                        <Image x:Name="image" Source="{DynamicResource Maximize}" Opacity="0.75"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Color}" />
                            <Setter TargetName="image" Property="Opacity" Value="1.0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource LightColor}" />
                            <Setter TargetName="image" Property="Opacity" Value="1.0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonMinimizeWindowStyle" TargetType="{x:Type Button}">
        <!--<EventSetter Event="Click" Handler="MinimizeClick"/>-->
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Background" Value="{DynamicResource DarkColor}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="Transparent"
                        SnapsToDevicePixels="True" Padding="8">
                        <Image x:Name="image" Source="{DynamicResource Minimize}" Opacity="0.75"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Color}" />
                            <Setter TargetName="image" Property="Opacity" Value="1.0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource LightColor}" />
                            <Setter TargetName="image" Property="Opacity" Value="1.0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="QuitModalWindow" TargetType="{x:Type Window}">

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome 
                    CaptionHeight="0"
                    GlassFrameThickness="0"
                    CornerRadius="8"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="0"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Red" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border>
                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter />
                            </AdornerDecorator>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MessengerSettingsWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome 
                    CaptionHeight="30"
                    GlassFrameThickness="0"
                    CornerRadius="8"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="10"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource DarkerColor}" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Padding="16" Background="Transparent">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="15" ShadowDepth="0" Opacity="0.75" Color="Black"/>
                        </Border.Effect>

                            <Grid >
                                <Border 
                                    CornerRadius="4"
                                    Background="{DynamicResource DarkColor}"
                                    Padding="0, 30, 0, 0">
                                    <AdornerDecorator>
                                        <ContentPresenter />
                                    </AdornerDecorator>
                                </Border>
                                <Border>
                                    <DockPanel 
                                        Height="30"
                                        VerticalAlignment="Top"
                                        LastChildFill="False">
                                        <TextBlock 
                                        Margin="10,0,0,0"
                                        VerticalAlignment="Center"
                                        DockPanel.Dock="Left"
                                        FontSize="12"
                                        Opacity="1.0"
                                        Foreground="{DynamicResource TextBase}"
                                        Text="{TemplateBinding Title}" />
                                        <Button x:Name="btnClose"
                                        Command="{Binding CloseWindowCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                        Style="{DynamicResource ButtonCloseWindowStyle}"
                                        DockPanel.Dock="Right"
                                        WindowChrome.IsHitTestVisibleInChrome="True" >
                                        </Button>
                                    </DockPanel>
                                </Border>
                            </Grid>


                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
