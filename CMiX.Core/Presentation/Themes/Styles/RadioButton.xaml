<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style TargetType="{x:Type RadioButton}">
        <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>-->
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}">
                        <Grid>
                            <Ellipse 
                                x:Name="outerCircle"
                                StrokeThickness="2"
                                Stroke="{DynamicResource Color}"
                                Fill="Transparent" 
                                Stretch="Uniform"/>
                            <Ellipse 
                                x:Name="innerCircle"
                                Margin="4"
                                StrokeThickness="1"
                                Stroke="Transparent"
                                Fill="Transparent" 
                                Stretch="Uniform"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{DynamicResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="0,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="outerCircle" Value="{DynamicResource HighLightColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBase}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Stroke" TargetName="innerCircle" Value="{DynamicResource HighLightColor}"/>
                            <Setter Property="Fill" TargetName="innerCircle" Value="{DynamicResource HighLightColor}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Stroke" TargetName="outerCircle" Value="{DynamicResource HighHighLightColor}"/>
                                <Setter Property="Fill" TargetName="innerCircle" Value="{DynamicResource HighHighLightColor}"/>
                            </MultiTrigger.Setters>

                        </MultiTrigger>
                        <!--<Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="radioButtonBorder" Property="Opacity" Value="0.56" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButtonLayer" TargetType="{x:Type RadioButton}">
        <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>-->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border 
                        x:Name="radioButtonBorder" 
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        Background="{TemplateBinding Background}">
                        <ContentPresenter 
                            x:Name="presenter"
                            Opacity="1.0"
                            HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{DynamicResource HighLightColor}" />
                                <Setter TargetName="presenter" Property="Opacity" Value="1.0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{DynamicResource HighLightColor}" />
                                <Setter TargetName="presenter" Property="Opacity" Value="0.9" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="presenter" Property="Opacity" Value="0.9" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="presenter" Property="Opacity" Value="0.5" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="Red" />
                            <Setter TargetName="radioButtonBorder" Property="Opacity" Value="1.0" />
                        </Trigger>-->

                        <!--<Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="Opacity" Value="1.0" />
                        </Trigger>-->

                        
                        <!--<Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="radioButtonBorder" Property="Opacity" Value="0.56" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="Red"/>
                        </Trigger>-->
                        
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>